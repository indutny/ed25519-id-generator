#!/usr/bin/env node

const cluster = require('cluster');
const id = require('ed25519-id');

if (cluster.isMaster) {
  const argv = require('yargs')
      .alias('p', 'prefix')
      .alias('l', 'loose')
      .describe('prefix', 'output representation prefix')
      .describe('loose', 'accept longer result prefixes')
      .boolean('loose')
      .default('loose', false)
      .demand('prefix')
      .argv;

  const os = require('os');
  const CPU_COUNT = os.cpus().length;

  for (let i = 0; i < CPU_COUNT; i++) {
    const worker = cluster.fork();
    worker.send({ prefix: argv.prefix, loose: argv.loose });
    worker.on('message', (msg) => {
      console.log(msg);
      process.exit(0);
    });
  }
  return;
}

const signatures = require('sodium-signatures');
process.on('message', (config) => {
  const pair = id.generate(config.prefix, () => signatures.keyPair(),
                           config.loose);

  process.send({
    secretKey: pair.secretKey.toString('hex'),
    publicKey: pair.publicKey.toString('hex'),
    id: id.stringify(pair.publicKey, config.prefix.length)
  });
});
